# ✅ ToDo & Co – Application Symfony de gestion de tâches

ToDo & Co est une application Symfony permettant aux utilisateurs de gérer leurs tâches quotidiennes. Elle intègre un système d'authentification avec gestion des rôles (utilisateur/admin) et un ensemble de règles d'autorisation.

---

## ⚙️ Prérequis

Avant de commencer, assurez-vous d’avoir installé :

- PHP >= 8.1
- Composer
- Symfony CLI (`symfony`)
- Docker + Docker Compose
- Make (`make` installé sur votre OS)

---

## 🚀 Installation du projet

1. Clonez ce dépôt :

```bash
git clone https://github.com/<votre-utilisateur>/todo-co.git
cd todo-co
```

2. Installez les dépendances :

```bash
composer install
```

3. Copiez le fichier `.env` :

```bash
cp .env .env.local
```

Configurez les accès à la base de données dans `.env.local` :

```
DATABASE_URL="mysql://user:password@127.0.0.1:3306/todo_co_db"
```

4. Lancez la base de données :

```bash
make start-db
```

5. Lancez les migrations :

```bash
make migrate
```

---

## ▶️ Lancer l'application

Démarrez le serveur Symfony avec :

```bash
make start
```

L'application est accessible à l'adresse : [http://localhost:8000](http://localhost:8000)

Pour arrêter le serveur :

```bash
make stop
```

---

## ✅ Lancer les tests

Pour exécuter la suite de tests et générer un rapport de couverture :

```bash
make test
```

Un rapport HTML sera disponible dans le dossier `var/coverage/index.html`.

---

## 🛠 Commandes Make disponibles

| Commande         | Description                                                             |
|------------------|-------------------------------------------------------------------------|
| `make start`     | Démarre le serveur Symfony interne en arrière-plan                      |
| `make stop`      | Arrête le serveur Symfony                                               |
| `make start-db`  | Lance les conteneurs Docker (ex : base de données)                      |
| `make migrate`   | Exécute les migrations Doctrine dans le conteneur Docker                |
| `make test`      | Lance PHPUnit avec Xdebug pour générer un rapport de couverture         |

---

## 🗂 Structure du projet

- `src/` – Code source Symfony
- `tests/` – Tests unitaires et fonctionnels
- `config/` – Fichiers de configuration
- `public/` – Point d’entrée de l’application
- `Makefile` – Commandes automatisées
- `docker-compose.yml` – Configuration Docker

---

## 🤝 Contribution

Consultez le fichier `CONTRIBUTING.md` pour connaître les conventions de développement, les étapes de contribution et les bonnes pratiques du projet.

---

## 🧪 Audit & Qualité

Un audit de code et un audit de performance peuvent être réalisés avec :
- [PHPStan](https://phpstan.org/)
- [Symfony Profiler](https://symfony.com/doc/current/profiler.html)
- [Codacy](https://www.codacy.com/) ou [SonarCloud](https://sonarcloud.io/)

---

## 📄 Licence

Projet à but pédagogique – OpenClassrooms – Tous droits réservés.
